version: '3.8'

services:
  server:
    build: ./server  # Path to server Dockerfile
    ports:
      - "5050:5050"
    environment:
      - DONT_USE_DOT_ENV=1
      - FLASK_ENV=development
      # RabbitMQ
      - RABBITMQ_USER=user
      - RABBITMQ_PASS=password
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      - scheduler
      - rabbitmq
    networks:
      - app-network

  scheduler:
    build: ./scheduler  # Path to server Dockerfile
    environment:
      - DONT_USE_DOT_ENV=1
      - FLASK_ENV=development
      # Local MySQL
      - MYSQL_HOST=scheduler_db
      - MYSQL_DATABASE=scheduler_db
      - MYSQL_USER=scheduler_user
      - MYSQL_PASSWORD=securepassword
      # articles MySQL
      - MYSQL_ARTICLES_HOST=REMOTE_HOST:3306
      - MYSQL_ARTICLES_DATABASE=storage_db
      - MYSQL_ARTICLES_USER=admin
      - MYSQL_ARTICLES_PASSWORD=securepassword
      # RabbitMQ
      - RABBITMQ_USER=user
      - RABBITMQ_PASS=password
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      - scheduler_db
      - rabbitmq
    networks:
      - app-network

  app:
    build: ./app  # Path to app Dockerfile
    ports:
      - "80:3000"
    volumes:
      - ./app:/app
    environment:
      - REACT_APP_BE_ADDRESS=http://localhost:5050
      - CHOKIDAR_USEPOLLING=true  # To help with file system watching in Docker
    depends_on:
      - server

  scheduler_db:
    image: mysql:8.0 
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: scheduler_db
      MYSQL_USER: scheduler_user
      MYSQL_PASSWORD: securepassword
    volumes:
      - scheduler_datadrive:/var/lib/mysql
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      # - "5672:5672"   # RabbitMQ messaging port
      - "15672:15672" # RabbitMQ management UI port
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      
networks:
  app-network:
    driver: bridge

volumes:
  rabbitmq_data:
  scheduler_datadrive:

